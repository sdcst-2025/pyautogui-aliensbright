example0.py
Explain what it does. What do the different lines do?

import time
    importing the time module which has many functions including pausing time, measuring time, finding the current tib


"""
time is measure in 'epoch time' which is the number 
of seconds that have elapsed since Jan 1, 1970, 
kind of like the beginning of the computer age
"""

x = time.time()
    returns the current time, it is measured as the number of seconds since January 1st, 1970
    stores that float value into the variable named x

print(x)
    printing the time stored in x

time.sleep(3.5)
    pauses time for around 3.5 seconds

print("I went to sleep for 3.5 seconds")
now = time.time()
    returns the current time, which will be around 3.5 seconds after the time at the start.

print(f"elapsed time: {now - x} seconds")
    returns the total elapsed time between the 2 lines of code x=time.time and now=time.time
    This value is just over 3.5 seconds since a small amount of time was used to run the code between those two values.

example1.py
Explain what it does. Give a brief summary of the program
and explain the importance of each line.


import time

# time can also be used to create a list of alarms

alarms = [0,0,0]
delays = [10,20,60] set ov values that represent seconds after the start of the program 
start = time.time()
alarms[0] = start + delays[0]
alarms[1] = start + delays[1]
alarms[2] = start + delays[2]

while True:
    for i in range(0,3):
        now = time.time()
        if now > alarms[i]:
            print(f"alarm {i} {delays[i]} second alarm has been triggered because now ({round(now,3)}) > alarm {i} {round(alarms[i],3)}")
            alarms[i] = now + delays[i]
    time.sleep(1)
    print(f"time elapsed is {round(time.time() - start,3)}")